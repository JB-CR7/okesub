#include <stdio.h>
#include <stdlib.h>

struct queue {
    int info;
    struct queue *link;
};

struct queue *front = NULL, *rear = NULL;

void QInsert(int item) {
    struct queue *new_node;
    new_node = (struct queue *)malloc(sizeof(struct queue));
    new_node->info = item;
    new_node->link = NULL;

    if (front == NULL && rear == NULL) {
        front = rear = new_node;
        rear->link = front;
    } else {
        rear->link = new_node;
        rear = new_node;
        rear->link = front;
    }
}

void QDelete() {
    struct queue *ptr;
    if (front == NULL && rear == NULL) {
        printf("\nQueue is Empty");
    } else if (front == rear) {
        ptr = front;
        printf("\nThe value being deleted is: %d", ptr->info);
        front = rear = NULL;
        free(ptr);
    } else {
        ptr = front;
        printf("\nThe value being deleted is: %d", ptr->info);
        front = front->link;
        rear->link = front;
        free(ptr);
    }
}

void Display() {
    struct queue *ptr;
    if (front == NULL && rear == NULL) {
        printf("\nQueue is Empty");
    } else {
        printf("\nThe Queue Elements are: ");
        ptr = front;
        do {
            printf("%d ", ptr->info);
            ptr = ptr->link;
        } while (ptr != front);
    }
}

int main() {
    int val, choice;
    do {
        printf("\n*****MAIN MENU*****");
        printf("\n1. Insert");
        printf("\n2. Delete");
        printf("\n3. Display");
        printf("\n4. Exit");
        printf("\nEnter your option: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("\nEnter the number to insert into Queue: ");
                scanf("%d", &val);
                QInsert(val);
                break;
            case 2:
                QDelete();
                break;
            case 3:
                Display();
                break;
            case 4:
                printf("\nExiting...");
                break;
            default:
                printf("\nInvalid choice. Please try again.");
        }
    } while (choice != 4);

    return 0;
}
